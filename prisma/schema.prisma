// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text  
  expiresAt   DateTime
}

model User {
  id        Int   @id @default(autoincrement())
  username  String   @db.Text
  hash      String   @db.Text  
  email     String   @unique 
  files  File[]
  folders Folder[]
}

model File {
  id  Int @id @default(autoincrement())
  imageId String
  name String @db.Text
  url String @db.Text
  user  User  @relation(fields: [userId], references: [id])
  upload DateTime
  userId Int 
  folder Folder @relation(fields: [folderId], references: [id])
  folderId Int
}

model Folder {
  id Int @id @default(autoincrement())
  name String @db.Text
  user User @relation(fields: [userId], references: [id])
  userId Int
  files File[]
}

model Test {
id  Int @id @default(autoincrement())
created DateTime @default(now())
expired DateTime?
uniqueurl String?
name String?
folderId Int?
ownerId Int? 
}

model Foldershare {
  id Int @id 
  name String @db.Text
  userId Int
  created DateTime @default(now())
  expired DateTime?
  uniqueurl String?
  files Fileshare[]
}

model Fileshare {
  id  Int @id @default(autoincrement())
  imageId String
  name String @db.Text
  url String @db.Text
  userId Int 
  folder Foldershare @relation(fields: [folderId], references: [id])
  folderId Int
}

// DELETE FROM "Foldershare";
// DELETE FROM "Fileshare";

// SELECT * FROM "Foldershare";
// SELECT * FROM "Fileshare";